package com.agbu.android.lesson2;

public class homework_5 {
    public static void main(String[] args) {

        /* 431․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * օժանդակ անկյունագծից ներքև կամ նրա վրա գտնվող այն
         տարրերի քանակը, որոնց ինդեքսների գումարը կենտ է։ */
        int n = 20;
        int product = 1;
        int sum = 0;
        int a = 3;
        int b = 8;


        int[][] matrix = new int[n][n];

        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix.length; j++){
                matrix[i][j] = (i+1) * (j+1);
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();

        int count = 0;
        int size = matrix.length;

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i + j >= n - 1 && (i + j) % 2 == 1) {
//                    count++;
//                }
//            }
//        }
//
//        System.out.println("431: " + count);
//
        /* 432․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * օժանդակ անկյունագծից վերև կամ նրա վրա գտնվող այն
         տարրերի միջին քառակուսայինը, որոնց ինդեքսների գումարը կենտ է։ */


//
//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i + j <= n - 1 && (i + j) % 2 == 1) {
//                    sum += matrix[i][j];
//                    count++;
//                }
//            }
//        }
//
//        System.out.println("432: " + sum/count);

        /* 433․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * օժանդակ անկյունագծից վերև գտնվող այն տարրերի քանակը, որոնք պատկանում են տրված
         [a : b] միջակայքին */

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i + j > n - 1) {
//                    for ( a = 0; a < b; a++) {
//                        sum += matrix[i][j];
//                    }
//                }
//            }
//        }
//        System.out.println(sum);

        /* 434․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * օժանդակ անկյունագծից ներքև կամ նրա վրա գտնվող այն տարրերի գումարը, որոնց բացարձակ արժեքը
        պատկանում է [5,4 : 15,3] միջակայքին */

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i + j <= n - 1) {
//                    int k;
//                    for (k = matrix[5][4]; k < matrix[15][3]; k++) {
//                        sum += matrix[i][j];
//                    }
//                }
//            }
//        }
//        System.out.println(sum);

        /* 435․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * օժանդակ անկյունագծից վերև գտնվող այն տարրերի քանակը, որոնց ամբողջ մասը
        բազմապատիկ է 5 թվին */

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i + j > n - 1) {
//                    if (matrix[i][j] % 5 == 0) {
//                        count++;
//                    }
//                }
//            }
//        }
//        System.out.println(count);

        /* 436․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * գլխավոր անկյունագծից ներքև գտնվող այն տարրերի միջին թվաբանականը, որոնց արժեքները [a: b]
        պատկանում են տրված միջակայքին */

//
//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i < j) {
//                    for ( a = 0; a < b; a++) {
//                        sum += matrix[i][j];
//                    }
//                }
//            }
//        }
//        System.out.println(sum);

        /* 437․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * գլխավոր անկյունագծից ներքև կամ նրա վրա գտնվող այն տարրերի միջին քառակուսայինը, որոնք
         ունեն ամբողջ արժեքներ*/

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i <= j) {
//                    sum += matrix[i][j] * matrix[i][j];
//                }
//            }
//        }
//        System.out.println(sum);

        /* 438․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * գլխավոր անկյունագծից ներքև գտնվող այն դրական տարրերի քանակը, որոնք գտնվում են
         զույգ համարով սյուներում */

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i > j && matrix[i][j] > 0) {
//                    if (j % 2 == 0) {
//                        count++;
//                    }
//                }
//            }
//        }
//        System.out.println(count);

        /* 439․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * գլխավոր անկյունագծից վերև գտնվող այն տարրերի արտադրյալը, որոնց ինդեքսների
         գումարը կենտ է */

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i < j && (i + j) % 2 == 1) {
//                    product *= matrix[i][j];
//                }
//            }
//        }
//        System.out.println(product);

        /* 440․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * գլխավոր անկյունագծից վերև գտնվող այն տարրերի գումարը, որոնց ինդեքսների
         գումարը զույգ է */

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i < j && (i + j) % 2 == 0) {
//                    sum += matrix[i][j];
//                }
//            }
//        }
//        System.out.println(sum);

        /* 441․ Տրված են n ամբողջ թիվը և n x n չափի մատրից: Կազմել բլոկ-սխեմա և ծրագիր,
         որոնք կհաշվեն և կտպեն մատրիցի
        * գլխավոր անկյունագծից վերև գտնվող դրական տարրերի միջին քառակուսայինը։  */

//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++){
//                if (i < j) {
//                    if (matrix[i][j] > 0) {
//                        sum += matrix[i][j] * matrix[i][j];
//                        count++;
//                    }
//                }
//            }
//        }
//
//        System.out.println("441: " + sum/count);
    }
}
